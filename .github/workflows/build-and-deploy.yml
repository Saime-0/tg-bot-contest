name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'окружение из settings/environments для деплоя'
        required: true
        type: string

permissions:
  contents: read

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v7
        with:
          args: --timeout 10m

  build:
    runs-on: ubuntu-latest
    needs: golangci-lint
    steps:
      - uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Install dependencies
        run: go mod download && go mod verify

      - name: Build application
        run: CGO_ENABLED=0 go build -v -o ./bin/app ./cmd/app/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./bin/tgcontestbot

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.environment}}
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./bin/tgcontestbot

      - name: Setup SSH config
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id
          chmod 600 ~/.ssh/id
          cat <<EOF >> ~/.ssh/config
          Host Server
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USERNAME }}
            Port ${{ secrets.SSH_PORT }}
            IdentityFile ~/.ssh/id
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/config

      - name: Check server utils
        run: ssh Server "bash -s" < ./scripts/check-utils.sh

      - name: Delivery
        run: SSH_HOST=Server DIR="~/release/${{ vars.NAMESPACE }}-tg-contest-bot" ./scripts/rsync-project.sh

      - name: Deploy
        run: |
          ssh Server "
            set -e
            NAMESPACE=${{ vars.NAMESPACE }} \
            APP_SRC_DIR="~/release/${{ vars.NAMESPACE }}-tg-contest-bot" \
            APP_FILENAME=tgcontestbot \
            VERSION=${{ github.ref_name }} \
            TOKEN=${{ secrets.BOT_TOKEN }} \
            ~/release/${{ vars.NAMESPACE }}-tg-contest-bot/scripts/deployment.sh
          " 
