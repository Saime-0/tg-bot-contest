name: staging

on: workflow_dispatch

env:
  PROJECT_DIR: ~/src/staging/tgbotcontest

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH config
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat <<EOF >> ~/.ssh/config
          Host Prod
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USERNAME }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/config

      - name: Rsync copy project
        run: SSH_HOST=Prod DIR="$PROJECT_DIR" ./scripts/rsync-project.sh

  start_new_service:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: SSH start application
        uses: appleboy/ssh-action@v1.2.0
        env:
          DB_DIR: ~/.local/share/tgbotcontest/staging
          DOCKER_DB_DSN: file:/var/lib/tgbotcontest/staging/main.dev.db?cache=shared
        with:
         host: ${{ secrets.SSH_HOST }}
         username: ${{ secrets.SSH_USERNAME }}
         key: ${{ secrets.SSH_KEY }}
         script: |
           set -e
           cd ${{ env.PROJECT_DIR }}
           echo TOKEN=${{ secrets.STAGING_BOT_TOKEN }} > deploy/.env
           echo MAIN_DATABASE_DSN=${{ env.DOCKER_DB_DSN }} >> deploy/.env
           DB_DIR=${{ env.DB_DIR }} docker compose -f deploy/docker-compose.yml up --force-recreate --build -d tbc-dev
